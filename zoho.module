<?php

/**
 * @file
 * The module that defined the callbacks to communicate with zoho crm.
 */

define('ZOHO_URL', 'http://crm.zoho.com/crm/private/xml/');
define('ZOHO_TICKET_URL', 'https://accounts.zoho.com/');

/**
 * Implements hook_menu().
 */
function zoho_menu() {
  $items = array();
  $items['admin/config/services/zoho'] = array(
    'title' => 'Zoho API Settings',
    'description' => 'Configure the settings for zoho.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('zoho_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'weight' => -10,
  );
  $items['admin/config/services/zoho/settings'] = array(
    'title'  => 'Settings',
    'type'   => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  return $items;
}

/**
 * Menu callback for admin/config/zoho. Admin settings form.
 */
function zoho_admin_settings_form($form, &$form_state) {
  $form = array();
  $form['zoho_crm_authtoken'] = array(
    '#type' => 'textfield',
    '#title' => t('Zoho API Authtoken'),
    '#default_value' => variable_get('zoho_crm_authtoken', ''),
    '#description' => t('Enter a Valid API Authtoken. To use an existing Authtoken, login to zoho crm and goto ')
     . l(t('Existing tokens'), 'https://accounts.zoho.com/u/h#setting/authtoken', array('attributes' => array('target'=>'_blank')))
     . '<br/>' . t('OR') . '<br/>' . t('Leave this blank and enter your zoho crm username and password in the below fieldset to generate a new Authtoken.')
  );

  $form['zoho_credentials'] = array(
    '#type'  => 'fieldset',
    '#title' => t('Generate new Authtoken'),
    '#collapsible' => TRUE,
    '#collapsed' => (variable_get('zoho_crm_authtoken', 0)),
    '#description' => t('Use this only if you need to generate a new Authtoken. And to generate a new token, the above Authtoken field should be empty.') . '<br/><strong>' . t('Username and password are NOT stored anywhere.') . '</strong>'
  );
  $form['zoho_credentials']['zoho_crm_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Zoho Username/Email'),
  );
  $form['zoho_credentials']['zoho_crm_pass'] = array(
    '#type' => 'password',
    '#title' => t('Zoho Password'),
  );

  $form['#validate'][] = 'zoho_validate_settings';
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Settings'),
  );
  return $form;
}

/**
 * Validate function for admin settings form.
 *
 */
function zoho_validate_settings($form, &$form_state) {
  if (($form_state['values']['zoho_crm_authtoken'] == '') && (($form_state['values']['zoho_crm_username'] == '') || ($form_state['values']['zoho_crm_pass'] == ''))) {
    form_set_error('', t('Please fill api Authtoken OR both Username & Password to generate a new Authtoken.'));
  }
}

/**
 * Submit function for admin settings form.
 *
 */
function zoho_admin_settings_form_submit($form, &$form_state) {
  // If Authtoken doesn't exist then generate new Authtoken.
  if (($form_state['values']['zoho_crm_authtoken'] == '') && (($form_state['values']['zoho_crm_username'] != '') && ($form_state['values']['zoho_crm_pass'] != ''))) {
    $result = _zoho_generate_authtoken($form_state['values']['zoho_crm_username'], $form_state['values']['zoho_crm_pass']);
    if (isset($result['authtoken'])) {
      drupal_set_message(t('Successfully generated a new Authtoken : ') . $result['authtoken']);
    }
    else {
      drupal_set_message(t('There was an error: :error.<br/>Please resolve the error and try again.', array(':error' => $result['error'])), 'error');
    }
  }
  elseif($form_state['values']['zoho_crm_authtoken'] != '') {
    //Update the Authtoken from the admin settings form.
    variable_set('zoho_crm_authtoken', $form_state['values']['zoho_crm_authtoken']);
  }
}

/**
 * Sending data to zoho crm.
 *
 * @param string $type
 *   Type of records to be added. e.g,'Leads'
 * @param string $xml
 *   The xml data to be stored in zoho crm.
 * @param string $update_id
 *   Optional-the Id of the record to be updated.
 *   If specified Updates the data already present in crm.
 *
 * @returns object
 *   Returns an object with following keys:
 *   success will contain TRUE/FALSE which determines if the request is succesfull or not.
 *   error will contain error code if the request was not successfull.
 *   message will contain success message or error message.
 *   result will contain the xml object of the records inserted if the request is successfull.
 */
function zoho_store_data_to_crm($type, $xml, $update_id = NULL) {
  $result = (object)array();
  $ticket = variable_get('zoho_crm_authtoken', FALSE);
  if(!$ticket) {
    $link = l(t('Zoho Configurations'), 'admin/config/services/zoho');
    watchdog('zoho', 'Zoho CRM Authtoken should be configured at admin > config > services > zoho', array(), WATCHDOG_ERROR, $link);
      $result->success = FALSE;
      $result->message = 'Zoho API is not configured.';
      return $result;
  }
  if (isset($update_id)) {
    $url = ZOHO_URL . $type . "/updateRecords?id=" . trim($update_id) . "&authtoken=" . trim($ticket) . "&scope=crmapi" . "&newFormat=1";
  }
  else {
    $url = ZOHO_URL . $type . "/insertRecords?authtoken=" . trim($ticket) . "&scope=crmapi" . "&newFormat=1";
  }
  $response = drupal_http_request($url, array('method' => 'POST', 'data' => $xml, 'headers' => array('Content-Type' => 'application/x-www-form-urlencoded; charset=utf-8')));
  if ($response->code == 200) {
    $xml = simplexml_load_string($response->data, 'SimpleXMLElement', LIBXML_NOCDATA);
    if (isset($xml->result)) {
      $result->success = TRUE;
      $result->message = (string)$xml->result->message;
      $result->result  = $xml->result->recorddetail;
    } 
    else if (isset($xml->error)) {
      $result->success = FALSE;
      $result->message = (string)$xml->error->message;
      $result->error  = (string)$xml->error->code;
    }
  }
  else {
    $result->success = FALSE;
    $result->error = $response->code;
    $result->message = $response->error;
  }
  return $result;
}

/**
 * Generates a new ZOHO Auth Token and stores in db.
 *
 * @param string $username
 *   User name of the Zoho crm account
 * @param string $pass
 *   Password for Zoho crm account
 * @returns array
 *   Returns an array with authtoken if success and error otherwise.
 */
function _zoho_generate_authtoken($username, $pass) {
  $url = ZOHO_TICKET_URL . "apiauthtoken/nb/create?SCOPE=ZohoCRM/crmapi&EMAIL_ID=" . $username . "&PASSWORD=" . $pass;
  $response = drupal_http_request($url, array('method' => 'POST', 'headers' => array('Content-Type' => 'application/x-www-form-urlencoded; charset=utf-8')));
  if($response->code == "200") {
    $result = $response->data;
    $anArray = explode("\n",$result);
    $authToken = explode("=",$anArray['2']);
    $cmp = strcmp($authToken['0'],"AUTHTOKEN");
    if ($cmp == 0)
      {
	variable_set('zoho_crm_authtoken', $authToken['1']);
	return array('authtoken' => $authToken['1']);
      }
    else {
      return array('error' => $authToken['1']);	
    }
  }
  else {
    return array('error' => $response->error);
  }
}

/**
 * Getting data from zoho crm.
 *
 * @param string $search_condition
 *   Search condition based on which records will be fetched.
 *   e.g,'(Email|=|xyz@xyz.com)'
 * @param string $type
 *   Type of records to be fetched. e.g,'Leads'
 * @param string $select_columns
 *   Columns of the records to be fetched.
 *   e.g, 'Leads(First Name,Last Name,Email)'
 *
 * @returns string|array
 *   Value : Error message if error occurs, Otherwise returns an array.
 */
function zoho_get_records($search_condition, $type = 'Leads', $select_columns = 'All') {
  $result = (object)array();
  $ticket = variable_get('zoho_crm_authtoken', FALSE);
  if(!$ticket) {
    $link = l(t('Zoho Configurations'), 'admin/config/services/zoho');
    watchdog('zoho', 'Zoho CRM Authtoken should be configured at admin > config > services > zoho', array(), WATCHDOG_ERROR, $link);
    $result->success = FALSE;
    $result->message = 'Zoho API is not configured.';
    return $result;
  }
  
  $params = '&scope=crmapi&selectColumns=' . urlencode($select_columns) . '&searchCondition=' . urlencode($search_condition);
  $url = ZOHO_URL . $type . "/getSearchRecords?authtoken=" . trim($ticket) . $params;
  $response = drupal_http_request($url);
  if ($response->code == 200) {
    $xml = simplexml_load_string($response->data, 'SimpleXMLElement', LIBXML_NOCDATA);
    if (isset($xml->result)) {
      $result->success = TRUE;
      $result->message = (string)$xml->result->message;
      $result->result  = $xml->result->recorddetail;

      foreach ($xml->result->$type->row->FL as $fl) {
	$key = str_replace(array(' '), '_', (string) $fl['val']);
	$values[$key] = (string) $fl;
      }
      $result->result = $values;
    } 
    else if (isset($xml->error)) {
      $result->success = FALSE;
      $result->message = (string)$xml->error->message;
      $result->error  = (string)$xml->error->code;
    }
  }
  else {
    $result->success = FALSE;
    $result->error = $response->code;
    $result->message = $response->error;
  }
  return $result;
  /*
  dpm($response);
  $output = simplexml_load_string($response->data, 'SimpleXMLElement', LIBXML_NOCDATA);
  dpm($output);
  if (isset($output->nodata)) {
    return t('No data with given parameters.');
  }
  elseif (isset($output->result)) {
    foreach ($output->result->$type->row->FL as $fl) {
      $key = str_replace(array(' '), '_', (string) $fl['val']);
      $values[$key] = (string) $fl;
    }
    return $values;
  }
  else {
    return t('@error', array('@error' => (string) $output));
  }
  */
}
